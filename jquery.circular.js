// Generated by CoffeeScript 1.6.3
/*
jQuery Circular Plugin v0.3

Release: 19/07/2013
Author: Jean-Denis Vauguet <jd@vauguet.fr>

http://github.com/chikamichi/jquery.circular

Licensed under the MIT licenses: http://www.opensource.org/licenses/mit-license.php
*/


(function() {
  (function($, window, document) {
    var $this, methods, _controls, _current, _internals, _interval, _nbSlides, _settings, _slides;
    $this = void 0;
    _settings = {
      a_slide: ".slides .slide",
      a_ctl: ".controls .control",
      transitionDelay: 1000,
      displayDuration: 4000,
      startingPoint: 0
    };
    _current = _settings.startingPoint;
    _slides = null;
    _controls = null;
    _nbSlides = null;
    _interval = null;
    methods = {
      init: function(options) {
        $this = $(this);
        $.extend(_settings, options || {});
        _slides = $(_settings.a_slide, $this);
        _controls = $(_settings.a_ctl, $this);
        _nbSlides = _slides.size();
        if (_nbSlides > 1) {
          $(_slides).hide();
          _internals.setActiveSlide();
          $(_slides[_current]).fadeIn(_settings.transitionDelay);
          _interval = _internals.start();
          _internals.bindEvents();
        } else {
          $(_settings.a_ctl, $this).hide();
        }
        return $this;
      },
      currentSlide: function() {
        return $(_slides[_current]);
      },
      currentControl: function() {
        return $(_controls[_current]);
      },
      current: function() {
        return {
          slide: methods.currentSlide(),
          control: methods.currentControl()
        };
      },
      jumpTo: function(event, id) {
        if (id == null) {
          id = null;
        }
        if (!id) {
          id = $(event.currentTarget).data('id');
        }
        return _internals.jumpTo(id);
      }
    };
    _internals = {
      setActiveSlide: function() {
        _controls.removeClass('active');
        methods.currentControl().addClass('active');
        _slides.removeClass('active');
        methods.currentSlide().addClass('active');
        return $this.trigger('circular:selected', methods.current(), $this);
      },
      next: function() {
        if (_current + 1 < _nbSlides) {
          return _current + 1;
        } else {
          return 0;
        }
      },
      start: function() {
        return setInterval(_internals.transitionTo, _settings.transitionDelay + _settings.displayDuration);
      },
      transitionTo: function(delay, to) {
        var faded, nextSlide, prevSlide;
        if (delay == null) {
          delay = _settings.transitionDelay;
        }
        if (to == null) {
          to = null;
        }
        prevSlide = methods.current();
        faded = prevSlide.slide.fadeOut(delay).promise();
        _current = to !== null ? to : _internals.next();
        nextSlide = methods.current();
        $this.trigger('circular:fading', prevSlide, nextSlide, $this);
        return faded.done(function() {
          _internals.setActiveSlide();
          nextSlide.slide.fadeIn(delay);
          return $this.trigger('circular:faded', nextSlide, prevSlide, $this);
        });
      },
      bindEvents: function() {
        return $(_settings.a_ctl, $this).click(methods.jumpTo);
      },
      jumpTo: function(id) {
        window.clearInterval(_interval);
        _internals.transitionTo(0, id);
        _interval = _internals.start();
        return false;
      }
    };
    return $.fn.circular = function(method) {
      if (methods[method]) {
        return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
      } else if (typeof method === "object" || !method) {
        return methods.init.apply(this, arguments);
      } else {
        return $.error("Method " + method + " does not exist on jquery.circular");
      }
    };
  })(jQuery, window, document);

}).call(this);
